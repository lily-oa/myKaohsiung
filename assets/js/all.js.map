{"version":3,"sources":["all.js"],"names":["url","select","document","querySelector","tabsList","subtitle","cardList","pageList","data","page","renderData","showData","selectGroup","map","item","Zone","newSelect","filter","index","indexOf","selectStr","forEach","list","innerHTML","textContent","pagination","myData","Charge","name","total","free","paid","push","console","log","length"],"mappings":";;AACA,IAAMA,GAAG,GAAG,oFAAZ,C,CAAkG;;AAClG,IAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,eAAvB,CAAf,C,CAA6D;;AAC7D,IAAMC,QAAQ,GAAGF,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAjB,C,CAA6D;;AAC7D,IAAME,QAAQ,GAAGH,QAAQ,CAACC,aAAT,CAAuB,WAAvB,CAAjB,C,CAA6D;;AAC7D,IAAMG,QAAQ,GAAGJ,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAjB,C,CAA6D;;AAC7D,IAAMI,QAAQ,GAAGL,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CAAjB,C,CAA6D;;AAE7D,IAAIK,IAAI,GAAG,EAAX;AACA,IAAIC,IAAI,GAAG,EAAX,C,CAEA;;AACA,SAASC,UAAT,CAAoBC,QAApB,EAA8B;AAC5B;AACA,MAAIC,WAAW,GAAGD,QAAQ,CAACE,GAAT,CAAa,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACC,IAAT;AAAA,GAAjB,CAAlB;AACA,MAAIC,SAAS,GAAGJ,WAAW,CAACK,MAAZ,CAAmB,UAACH,IAAD,EAAOI,KAAP;AAAA,WAAiBN,WAAW,CAACO,OAAZ,CAAoBL,IAApB,KAA6BI,KAA9C;AAAA,GAAnB,CAAhB;AACA,MAAIE,SAAS,kGAAb;AACAJ,EAAAA,SAAS,CAACK,OAAV,CAAkB,UAASP,IAAT,EAAc;AAC9B,QAAIQ,IAAI,6BAAmBR,IAAnB,gBAA4BA,IAA5B,cAAR;AACAM,IAAAA,SAAS,IAAIE,IAAb;AACD,GAHD;AAIArB,EAAAA,MAAM,CAACsB,SAAP,GAAmBH,SAAnB;AACAf,EAAAA,QAAQ,CAACmB,WAAT,GAAuB,MAAvB;AAEAC,EAAAA,UAAU,CAACd,QAAD,EAAW,CAAX,CAAV;AACD,C,CAED;AAEA;AACA;AACA;;;AAEA,IAAIe,MAAM,GAAG,CACX;AACEC,EAAAA,MAAM,EAAE,IADV;AAEEC,EAAAA,IAAI,EAAE;AAFR,CADW,EAKX;AACED,EAAAA,MAAM,EAAE,KADV;AAEEC,EAAAA,IAAI,EAAE;AAFR,CALW,EASX;AACED,EAAAA,MAAM,EAAE,KADV;AAEEC,EAAAA,IAAI,EAAE;AAFR,CATW,EAaX;AACED,EAAAA,MAAM,EAAE,KADV;AAEEC,EAAAA,IAAI,EAAE;AAFR,CAbW,CAAb;AAmBA,IAAIC,KAAK,GAAG;AACVC,EAAAA,IAAI,EAAE,EADI;AAEVC,EAAAA,IAAI,EAAE;AAFI,CAAZ;AAKAL,MAAM,CAACL,OAAP,CAAe,UAACP,IAAD,EAAOI,KAAP,EAAiB;AAC9B,MAAGJ,IAAI,CAACa,MAAL,IAAe,IAAlB,EAAuB;AACrBE,IAAAA,KAAK,CAACC,IAAN,CAAWE,IAAX,CAAgBlB,IAAhB,EADqB,CACG;AACzB,GAFD,MAEM,IAAGA,IAAI,CAACa,MAAL,IAAe,KAAlB,EAAwB;AAC5BE,IAAAA,KAAK,CAACE,IAAN,CAAWC,IAAX,CAAgBlB,IAAhB;AACD;AACF,CAND;AAOAmB,OAAO,CAACC,GAAR,2DAAuBL,KAAK,CAACC,IAAN,CAAWK,MAAlC","file":"all.js","sourcesContent":["\nconst url = 'https://raw.githubusercontent.com/hexschool/KCGTravel/master/datastore_search.json'; //高旅網  api\nconst select = document.querySelector('.select-group');      //行政區\nconst tabsList = document.querySelector('.tabs-list');       //熱門區\nconst subtitle = document.querySelector('.subtitle');        //卡片標題\nconst cardList = document.querySelector('.card-list');       //卡片\nconst pageList = document.querySelector('.pagination-list'); // 分頁\n\nlet data = [];\nlet page = {};\n\n// 渲染 select filter\nfunction renderData(showData) {\n  // 渲染有存在的行政區到選單欄位\n  let selectGroup = showData.map(item => item.Zone);\n  let newSelect = selectGroup.filter((item, index) => selectGroup.indexOf(item) == index);\n  let selectStr = `<option value=\"高雄全區\" selected\">-- 高雄全區 --</option>`;\n  newSelect.forEach(function(item){\n    let list=`<option value=\"${item}\">${item}</option>`;\n    selectStr += list;\n  });\n  select.innerHTML = selectStr;\n  subtitle.textContent = '高雄全區';\n\n  pagination(showData, 1);\n}\n\n// 渲染所有清單資料到畫面上\n\n//-----------------------------------------------------------------暫時新學習需用到的語法再寫專案\n// forEach 高雄Open Data 如何整理出對方要求的陣列和物件(整合陣列和物件)\n// 免費的物件和投幣式的物件分開放\n\nlet myData = [\n  {\n    Charge: '免費',\n    name: '廖洧杰充電站'\n  },\n  {\n    Charge: '投幣式',\n    name: '小花充電站'\n  },\n  {\n    Charge: '投幣式',\n    name: '小明充電站'\n  },\n  {\n    Charge: '投幣式',\n    name: '小天充電站'\n  },\n]\n\nlet total = {\n  free: [],\n  paid: []\n}\n\nmyData.forEach((item, index) => {\n  if(item.Charge == '免費'){\n    total.free.push(item);  //將所要的物件放入陣列裡\n  }else if(item.Charge == '投幣式'){\n    total.paid.push(item);\n  }\n});\nconsole.log(`目前免費充電站有${total.free.length}處`);\n"]}